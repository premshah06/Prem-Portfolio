{"version":3,"file":"static/js/710.4a0a0edf.chunk.js","mappings":"mLAIA,MAAMA,EAAcC,IAAwE,IAAvE,SAAEC,EAAQ,KAAEC,EAAI,MAAEC,EAAQ,UAAS,MAAEC,EAAQ,EAAC,QAAEC,EAAU,OAAOL,EACpF,MAAMM,GAAOC,EAAAA,EAAAA,UACPC,EAAkBP,EAaxB,OAXAQ,EAAAA,EAAAA,IAAUC,IACR,MAAMC,EAAOD,EAAME,MAAMC,iBAGzBP,EAAKQ,QAAQb,SAASc,EAAIP,EAAgB,GAAsB,GAAjBQ,KAAKC,IAAIN,GAGxDL,EAAKQ,QAAQI,SAASC,EAA2B,GAAvBH,KAAKC,IAAW,GAAPN,GACnCL,EAAKQ,QAAQI,SAASH,EAA2B,GAAvBC,KAAKI,IAAW,GAAPT,EAAiB,KAIpDU,EAAAA,EAAAA,KAAA,SAAOC,IAAKhB,EAAML,SAAUA,EAAUG,MAAOA,EAAMmB,UACjDF,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CACHrB,MAAOA,EACPsB,SAAsB,SAAZpB,EAAqB,GAAM,IACrCqB,SAAU,EACVC,WAAY,EACZC,cAAe,IACfC,UAAU,SACVC,QAAQ,SACRC,QAAQ,SAAQR,SAEfrB,KAEG,EA6BZ,EAzByB8B,IAA0B,IAAzB,QAAE3B,EAAU,OAAO2B,EAU3C,OACEX,EAAAA,EAAAA,KAAA,SAAAE,SAVe,CACf,CAAErB,KAAM,KAAMD,SAAU,EAAE,EAAG,GAAI,GAAIE,MAAO,WAC5C,CAAED,KAAM,KAAMD,SAAU,CAAC,GAAI,GAAI,GAAIE,MAAO,WAC5C,CAAED,KAAM,OAAQD,SAAU,EAAE,GAAI,GAAI,GAAIE,MAAO,WAC/C,CAAED,KAAM,QAASD,SAAU,CAAC,EAAG,GAAI,GAAIE,MAAO,WAC9C,CAAED,KAAM,QAASD,SAAU,EAAE,EAAG,GAAI,GAAIE,MAAO,WAC/C,CAAED,KAAM,SAAUD,SAAU,CAAC,EAAG,GAAI,GAAIE,MAAO,YAKnC8B,KAAI,CAACC,EAASC,KACtBd,EAAAA,EAAAA,KAACtB,EAAW,CAEVE,SAAUiC,EAAQjC,SAClBC,KAAMgC,EAAQhC,KACdC,MAAO+B,EAAQ/B,MACfE,QAASA,GAJJ8B,MAOH,C","sources":["components/3d/FloatingElements.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { Text } from '@react-three/drei';\r\n\r\nconst TechElement = ({ position, text, color = '#00D4FF', scale = 1, quality = 'low' }) => {\r\n  const mesh = useRef();\r\n  const initialPosition = position;\r\n\r\n  useFrame((state) => {\r\n    const time = state.clock.getElapsedTime();\r\n    \r\n    // Floating animation\r\n    mesh.current.position.y = initialPosition[1] + Math.sin(time) * 0.2;\r\n    \r\n    // Slow rotation\r\n    mesh.current.rotation.x = Math.sin(time * 0.2) * 0.1;\r\n    mesh.current.rotation.y = Math.cos(time * 0.2) * 0.1;\r\n  });\r\n\r\n  return (\r\n    <group ref={mesh} position={position} scale={scale}>\r\n      <Text\r\n        color={color}\r\n        fontSize={quality === 'high' ? 0.5 : 0.42}\r\n        maxWidth={2}\r\n        lineHeight={1}\r\n        letterSpacing={0.02}\r\n        textAlign=\"center\"\r\n        anchorX=\"center\"\r\n        anchorY=\"middle\"\r\n      >\r\n        {text}\r\n      </Text>\r\n    </group>\r\n  );\r\n};\r\n\r\nconst FloatingElements = ({ quality = 'low' }) => {\r\n  const elements = [\r\n    { text: \"ML\", position: [-5, 2, -5], color: '#6B46C1' },\r\n    { text: \"AI\", position: [5, -2, -3], color: '#00D4FF' },\r\n    { text: \"Data\", position: [-3, -1, -4], color: '#FFB800' },\r\n    { text: \"Cloud\", position: [4, 3, -6], color: '#00FF88' },\r\n    { text: \"React\", position: [-4, 4, -5], color: '#00D4FF' },\r\n    { text: \"Python\", position: [3, 1, -4], color: '#6B46C1' },\r\n  ];\r\n\r\n  return (\r\n    <group>\r\n      {elements.map((element, index) => (\r\n        <TechElement\r\n          key={index}\r\n          position={element.position}\r\n          text={element.text}\r\n          color={element.color}\r\n          quality={quality}\r\n        />\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default FloatingElements;\r\n"],"names":["TechElement","_ref","position","text","color","scale","quality","mesh","useRef","initialPosition","useFrame","state","time","clock","getElapsedTime","current","y","Math","sin","rotation","x","cos","_jsx","ref","children","Text","fontSize","maxWidth","lineHeight","letterSpacing","textAlign","anchorX","anchorY","_ref2","map","element","index"],"sourceRoot":""}